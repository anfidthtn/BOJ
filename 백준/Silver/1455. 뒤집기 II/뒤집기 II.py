n, m = map(int, input().split())
table = [] # 이진법 형태로 저장할 테이블
count = 0 # 뒤집은 횟수 카운트
for _ in range(n): # 각 줄별로
    table.append(int(input()[::-1], 2)) # 입력을 뒤집어서(우측이 높은 자리수가 되게) 이진법 형태로 만듦

for i in range(n - 1, -1, -1): # 맨 아랫줄 부터
    while table[i] > 0: # 이진법으로 표현한 숫자가 0을 초과할 때 (해당 행에 뒷면 존재)
        count += 1 # 뒤집기를 함
        xorNum = (1 << (len(bin(table[i])) - 2)) - 1 # 뒤집으면서 해당 행 이하의 해당 열 이하 부분은 뒤집음 처리 해야하니까 XOR 사용.
        '''
        예를 들어
        (좌우 반전된 상태로)
        00000
        00100
        01000 같은 상황의 마지막 줄 1이 있으면
        bin(table[2]) 가 '0b1000'이 나오고
        len = 6이 되고 거기에 2 빼면 4
        1 << 4 하면 10000(2)가 되고
        거기서 1 빼면 1111(2)가 되어서 이 숫자로 해당 행 이하에서 XOR 진행하면
        01111
        01011
        00111 상태가 됨.
        한 번 더 진행되면
        01000
        01100
        00000이 됨
        또 한 번 더 진행되면
        00111
        00011
        00000

        00100
        00000
        00000

        00011
        00000
        00000

        00000
        00000
        00000 으로 끝
        '''
        for j in range(i, -1, -1):
            table[j] ^= xorNum

print(count)